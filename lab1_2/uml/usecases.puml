
@startuml diagram

left to right direction
skin rose

actor Client as client
actor Manager as manager
actor Coach as coach
actor Worker as worker


'client
usecase "Buy Membership" as buyMembership
usecase "Cancel Membership" as cancelMembership
usecase "Change Membership Personal Data" as changePersonalData
usecase "Signup for training session" as signupTraining
usecase "Contact a coach" as contactCoach
usecase "Extend Membership" as ExtendSubcription
usecase "Manage Membership" as manageMembership
usecase "Browse Training Sessions" as BrowseTrainingSessions 

buyMembership -.>  manageMembership : <<includes>>
cancelMembership-.> manageMembership : <<includes>>
changePersonalData -.> manageMembership : <<includes>>
ExtendSubcription -.>  manageMembership  : <<includes>>

client --> BrowseTrainingSessions
client --> buyMembership
client --> cancelMembership
client --> changePersonalData
client --> ExtendSubcription

signupTraining -.> contactCoach  : <<extends>>
BrowseTrainingSessions -.> signupTraining : <<extends>>

'coach

usecase "Set Up Training Session" as setUpSession
usecase "Cancel Training Session" as cancelSession
usecase "Contact Clients" as contactClients
usecase "Book Gym" as BookGym
usecase "Switch Gym for Training Session" as SwitchGym
usecase "Access List of Trainees" as AccessTrainessList
usecase "Check Trainee Progress" as CheckTrainneProgress

coach --> setUpSession
coach --> cancelSession
coach --> BookGym
coach --> SwitchGym
coach --> AccessTrainessList
CheckTrainneProgress  -.> AccessTrainessList : <<extends>>

setUpSession -.> contactClients : <<extends>>
cancelSession -.> contactClients : <<extends>>
cancelSession -.> SwitchGym : <<extends>>

'worker
usecase "Access Clients' Memberships" as accessMembershipList
usecase "Authorize Membership Purchase for Client" as authorizePurchase
usecase "Cancel Membership for Client" as cancelClientMembership
usecase "Change Client Personal Data Assigned to the Membership" as changeClientData
usecase "Verify Clients' Memberships" as verifyMemberships
usecase "Maintain Gym" as maintainGym
usecase "Notify Clients about Memberships Expirations" as notifyClientsMebershipExpiration
usecase "Generate Clients' Actvity Raport" as generateClientActivityRaport  

worker --> maintainGym
worker --> authorizePurchase 
worker --> cancelClientMembership 
worker --> changeClientData 
worker --> verifyMemberships 
worker --> notifyClientsMebershipExpiration
worker --> generateClientActivityRaport

generateClientActivityRaport -.> accessMembershipList : <<extends>>
notifyClientsMebershipExpiration -.> accessMembershipList : <<extends>>
authorizePurchase -.> accessMembershipList : <<includes>>
cancelClientMembership -.> accessMembershipList : <<includes>>
changeClientData -.> accessMembershipList : <<includes>>
verifyMemberships -.> accessMembershipList : <<includes>>


'manager
manager --|> worker 

usecase "Manage Workers" as manageWorkers
usecase "Manage Gyms" as manageGyms
usecase "Monitor Mebership Details" as monitorMembershipDetails
usecase "Analyze Gyms Usage" as analyzeGymsUsage
usecase "Update Infomation About Gym's Avaiblity" as updateGymAvabilityInformation


manager --> manageWorkers
manager --> manageGyms
manager --> analyzeGymsUsage
manager --> monitorMembershipDetails
manager --> updateGymAvabilityInformation




@enduml


